docker build -t motorq_task .
docker-compose up -d


docker run -d \
  --name postgres_db \
  -e POSTGRES_USER=postgres \
  -e POSTGRES_PASSWORD=postgres \
  -e POSTGRES_DB=test_db \
  -v postgres_data:/var/lib/postgresql/data \
  -p 5432:5432 \
  postgres:13

docker run -e DB_NAME=test_db -e DB_USER=postgres -e DB_PASSWORD=postgres -e DB_HOST=localhost -e DB_PORT=5432 motorq_task



curl http://localhost:5000/api/conferences/1


k3d cluster create mycluster --servers 1 --agents 2
kubectl get nodes
# k3d image import motorq_task:latest --cluster mycluster
docker exec -it k3d-mycluster-server-0 crictl images



--------crate registry:
k3d registry create myregistry.local --port 5000
k3d cluster create mycluster --registry-use k3d-myregistry.local:5000
k3d node list
docker exec -it k3d-mycluster-server-0 sh
vi /etc/rancher/k3s/registries.yaml

ADD => mirrors:
  "k3d-myregistry.local:5000":
    endpoint:
      - "http://k3d-myregistry.local:5000"

docker build -t k3d-myregistry.local:5000/conference-api:latest .

# docker tag motorq_task:latest k3d-myregistry.local:5000/motorq_task:latest
# docker push k3d-myregistry.local:5000/motorq_task:latest

docker tag motorq_task:latest localhost:5000/motorq_task:latest
docker push localhost:5000/motorq_task:latest


#-------istio
curl -L https://istio.io/downloadIstio | ISTIO_VERSION=1.22.2 sh -
cd istio-1.22.2
export PATH=$PWD/bin:$PATH
istioctl install --set profile=demo -y
kubectl get crds | grep istio
kubectl label namespace seldon-system istio-injection=enabled












kubectl apply -f deployment.yaml
kubectl apply -f service.yaml
kubectl apply -f configmap.yaml
kubectl apply -f secret.yaml

kubectl delete deployment conference-api-deployment