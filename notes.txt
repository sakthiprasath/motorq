----------------------Docker section-------------------------

docker build -t motorq_task .

# docker-compose up -d
docker run -d \
  --name postgres_db \
  -e POSTGRES_USER=postgres \
  -e POSTGRES_PASSWORD=postgres \
  -e POSTGRES_DB=test_db \
  -v postgres_data:/var/lib/postgresql/data \
  -p 5432:5432 \
  postgres:13

To test if the container is working as expected
    docker exec -it <docker-container-tag> bash
    curl http://localhost:5000/api/conferences/1


docker run -e DB_NAME=test_db -e DB_USER=postgres -e DB_PASSWORD=postgres -e DB_HOST=localhost -e DB_PORT=5432 motorq_task



---------------------------create k3d cluster ---------------------------------

1. k3d cluster create mycluster-1 --servers 1 --agents 2 --network motorq_network
2. kubectl get nodes
3. To import the docker image motor_task:latest into krd cluster
     Method 1:
        k3d image import motorq_task:latest --cluster mycluster-1
        To list the docker images:
            docker exec -it k3d-mycluster-1-server-0 crictl images
     Method 2:
        (creating registry)
        k3d cluster create mycluster-1 --registry-use k3d-myregistry.local:5000
        k3d node list
        k3d registry create myregistry.local --port 5000
        docker exec -it k3d-mycluster-1-server-0 sh
        vi /etc/rancher/k3s/registries.yaml
        ADD => mirrors:
          "k3d-myregistry.local:5000":
            endpoint:
              - "http://k3d-myregistry.local:5000"

        docker build -t k3d-myregistry.local:5000/motorq_task:latest .

        # tried this way also
        # docker tag motorq_task:latest k3d-myregistry.local:5000/motorq_task:latest
        # docker push k3d-myregistry.local:5000/motorq_task:latest



-------------------------------istio-------------------------------Optional
curl -L https://istio.io/downloadIstio | ISTIO_VERSION=1.22.2 sh -
cd istio-1.22.2
export PATH=$PWD/bin:$PATH
istioctl install --set profile=demo -y
kubectl get crds | grep istio
kubectl label namespace seldon-system istio-injection=enabled




----------------------------Deploy the app/service/secret/config_map----------------------------
#----- install kubectl if not already present
1. curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/darwin/amd64/kubectl"
2. chmod +x ./kubectl
3. sudo mv ./kubectl /usr/local/bin/kubectl

To create the deployments the
1. kubectl apply -f deployment.yaml --namespace motorq
2. kubectl apply -f service.yaml --namespace motorq
3. kubectl apply -f configmap.yaml --namespace motorq
4. kubectl apply -f secret.yaml --namespace motorq
5. kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml

6. Port forwarding for a deployment
    kubectl port-forward svc/conference-api-service 80:9999 -n motorq
----------------------------delete the deployment----------------------------
kubectl delete deployment conference-api-deployment



----------------------------------------------------------------------------------------------------------------


Debugging commands
    kubectl describe pod conference-api-deployment-588b47bd76-mhmtw --namespace motorq
    kubectl exec -it conference-api-deployment-bbfd7dc74-9s2cj -n motorq -- /bin/bash



